{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","hexArray.js","Game.js","VenomSnake.svg","Board.js","HexGame.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","hexArray","Game","setup","hexes","venomSnake","life","power","defense","turn","moveLimit","moves","placeHex","G","ctx","index","newHex","flag","map","hex","Board","props","useState","setFlag","hexagons","hexCount","color","h","push","id","createHexagons","placeVenomSnake","event","preventDefault","target","href","baseVal","Snake","highlight","parseInt","removeHighlight","style","padding","textAlign","className","marginBottom","gridWidth","gridHeight","renderHexagonContent","hexagon","height","width","transform","onClick","onMouseEnter","onMouseLeave","hexProps","fill","stroke","HexGame","Client","game","board","numPlayers","debug","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPHQ,EAAW,CACpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAEpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAEpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAEpB,GAAI,GAAI,GAAI,GAAI,GAAI,ICLTC,EAAO,CAClBC,MAAO,iBACL,CACEC,MAAOH,EACPI,WAAY,CACVC,KAAM,EACNC,MAAO,EACPC,QAAS,KAKfC,KAAM,CACJC,UAAW,GAGbC,MAAO,CACLC,SAAU,SAACC,EAAGC,EAAKC,EAAOC,GACxB,IAAIC,GAAQ,EACZJ,EAAET,MAAQS,EAAET,MAAMc,KAAI,SAACC,GAErB,QADAF,GACYF,EACFC,EAEHG,Q,wBC1BA,MAA0B,uCC2G1BC,EAvGD,SAACC,GACb,MAAwBC,oBAAU,GAAlC,mBAAOL,EAAP,KAAaM,EAAb,KACA,EAA0BD,mBAASD,EAAMR,EAAET,OAA3C,mBAkBMoB,GAlBN,UAEuB,SAACC,GAItB,IAHA,IAAID,EAAW,GACXE,EAAQ,UAEHC,EAAI,EAAGA,EAAIF,EAAUE,IACZD,EAAZC,IAAMV,EAAc,UACX,UAEbO,EAASI,KAAK,CACZC,GAAIF,EACJD,MAAOA,IAGX,OAAOF,EAGQM,CAAe,KAE1BC,EAAkB,SAACC,GACvBA,EAAMC,iBAE4B,KAA9BD,EAAME,OAAOC,KAAKC,SACpBJ,EAAME,OAAOC,KAAKC,QAAUC,EAC5BhB,EAAMV,MAAMC,SAASoB,EAAME,OAAOL,GAAIR,EAAMR,EAAER,aAEvC2B,EAAME,OAAOC,KAAKC,UAAYC,IACrCL,EAAME,OAAOC,KAAKC,QAAU,GAC5Bf,EAAMV,MAAMC,SAASoB,EAAME,OAAOL,GAAI,MAKpCS,EAAY,SAACN,GACjBA,EAAMC,iBACNV,EAAQgB,SAASP,EAAME,OAAOL,MAG1BW,EAAkB,SAACR,GACvBA,EAAMC,iBACNV,GAAS,IA8CX,OACE,sBAAKkB,MAAO,CAAEC,QAAS,GAAIC,UAAW,UAAtC,UACE,oBAAIC,UAAU,QAAQH,MAAO,CAAEI,aAAc,IAA7C,mCACA,cAAC,IAAD,CACEC,UAAW,IACXC,WAAY,IACZvB,SAAUA,EACVwB,qBAlCuB,SAACC,GAC5B,IAAM9B,EACN,uBACAgB,KAAK,GACLN,GAAIoB,EAAQpB,GACZqB,OAAO,MACPC,MAAM,MACNC,UAAU,oBACVC,QAAStB,EACTuB,aAAchB,EACdiB,aAAcf,IAGd,OACE,mCAAGrB,KAqBDqC,SAjBc,SAACP,GACnB,MAAO,CACLR,MAAO,CACLgB,KAAMR,EAAQvB,MACdgC,OAAQ,iBCjFDC,EAFCC,YAAO,CAAEC,KAAM3D,EAAM4D,MAAO1C,EAAO2C,WAAY,EAAGC,OAAO,ICEzEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7E,K","file":"static/js/main.f6f0ca76.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let hexArray = [\r\n  {}, {}, {}, {}, {}, {},\r\n\r\n  {}, {}, {}, {}, {}, {},\r\n\r\n  {}, {}, {}, {}, {}, {},\r\n\r\n  {}, {}, {}, {}, {}, {}\r\n]\r\n","import {hexArray} from './hexArray.js'\r\n\r\nexport const Game = {\r\n  setup: () => (\r\n    {\r\n      hexes: hexArray, //game board\r\n      venomSnake: { //character hex to be placed\r\n        life: 3,\r\n        power: 3,\r\n        defense: 1\r\n      }\r\n    }\r\n  ),\r\n\r\n  turn: {\r\n    moveLimit: 1\r\n  },\r\n\r\n  moves: {\r\n    placeHex: (G, ctx, index, newHex) => { //update game board\r\n      let flag = -1\r\n      G.hexes = G.hexes.map((hex) => {\r\n        flag++\r\n        if (flag == index) { //index is a string, so use ==\r\n          return (newHex)\r\n        }\r\n        return hex\r\n       })\r\n    } //end placeHex\r\n  } //end moves\r\n\r\n} //end Game object\r\n","export default __webpack_public_path__ + \"static/media/VenomSnake.66cfff91.svg\";","import React, { useState } from 'react'\r\nimport HexagonGrid from 'react-hexagon-grid'\r\nimport Snake from './VenomSnake.svg'\r\n\r\nconst Board = (props) => {\r\n  const [flag, setFlag] = useState(-1) //highlight hex on hover\r\n  const [hexes, setHexes] = useState(props.G.hexes) //our game board\r\n\r\n  const createHexagons = (hexCount) => {\r\n    let hexagons = []\r\n    let color = \"#F5F5F5\"\r\n\r\n    for (let h = 0; h < hexCount; h++) {\r\n      if (h === flag) color = \"#00D1B2\"\r\n      else color = \"#F5F5F5\"\r\n\r\n      hexagons.push({\r\n        id: h,\r\n        color: color\r\n      })\r\n    }\r\n    return hexagons\r\n  }\r\n  \r\n  const hexagons = createHexagons(24)\r\n\r\n  const placeVenomSnake = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (event.target.href.baseVal === \"\") {\r\n      event.target.href.baseVal = Snake //visually telling us this hex has been placed\r\n      props.moves.placeHex(event.target.id, props.G.venomSnake) //actually placing the hex on the game board\r\n    }\r\n    else if (event.target.href.baseVal === Snake) {\r\n      event.target.href.baseVal = \"\"\r\n      props.moves.placeHex(event.target.id, {})\r\n    }\r\n\r\n  }\r\n\r\n  const highlight = (event) => {\r\n    event.preventDefault()\r\n    setFlag(parseInt(event.target.id))\r\n  }\r\n\r\n  const removeHighlight = (event) => {\r\n    event.preventDefault()\r\n    setFlag(-1)\r\n  }\r\n\r\n  //HELPFUL FOR LOOKING AT HEXAGON IDs\r\n  // const renderHexagonContent = (hexagon) => {\r\n  //   return (\r\n  //     <text\r\n  //       x=\"50%\"\r\n  //       y=\"50%\"\r\n  //       fontSize={100}\r\n  //       fontWeight=\"lighter\"\r\n  //       style={{ fill: 'black' }}\r\n  //       textAnchor=\"middle\"\r\n  //     >\r\n  //       {hexagon.id}\r\n  //     </text>\r\n  //   )\r\n  // }\r\n\r\n  const renderHexagonContent = (hexagon) => {\r\n    const hex =\r\n    <image\r\n    href=\"\"\r\n    id={hexagon.id}\r\n    height=\"60%\"\r\n    width=\"60%\"\r\n    transform=\"translate(90,100)\"\r\n    onClick={placeVenomSnake}\r\n    onMouseEnter={highlight}\r\n    onMouseLeave={removeHighlight}\r\n    />\r\n\r\n    return (\r\n      <>{hex}</>\r\n    )\r\n  }\r\n\r\n  const getHexProps = (hexagon) => {\r\n    return {\r\n      style: {\r\n        fill: hexagon.color, //hex background color\r\n        stroke: 'black' //hex border color\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 20, textAlign: \"center\" }}>\r\n      <h1 className=\"title\" style={{ marginBottom: 45 }}>Metal Gear Hex Battle</h1>\r\n      <HexagonGrid\r\n        gridWidth={700}\r\n        gridHeight={500}\r\n        hexagons={hexagons}\r\n        renderHexagonContent={renderHexagonContent}\r\n        hexProps={getHexProps}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\nimport { Client } from 'boardgame.io/react'\r\nimport { Game } from './Game'\r\nimport Board from './Board'\r\n\r\nconst HexGame = Client({ game: Game, board: Board, numPlayers: 2, debug: true })\r\n\r\nexport default HexGame\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport HexGame from './HexGame';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HexGame />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}